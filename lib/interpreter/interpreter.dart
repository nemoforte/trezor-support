import 'dart:typed_data';

import 'package:protobuf/protobuf.dart' as $pb;
import 'package:trezor_mirage/bytes_utils.dart';
import 'package:trezor_mirage/message_mapper.dart';
import 'package:trezor_mirage/protob/compiled/messages.pb.dart';
import 'package:trezor_mirage/protob/compiled/messages.pbenum.dart';

// ignore_for_file: avoid_print
void main() {
  // @formatter:off
  // Test message ResetDevcie
  // final Uint8List decBytes = Uint8List.fromList(<int>[63, 35, 35, 0, 14, 0, 0, 0, 26, 16, 128, 1, 24, 1, 50, 9, 77, 121, 32, 84, 114, 101, 122, 111, 114, 56, 139, 211, 244, 176, 6, 64, 1, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  // Initialized Trezor
  // final Uint8List decBytes = Uint8List.fromList(<int>[63, 35, 35, 0, 17, 0, 0, 1, 11, 10, 9, 116, 114, 101, 122, 111, 114, 46, 105, 111, 16, 2, 24, 7, 32, 1, 50, 24, 51, 53, 53, 67, 56, 49, 55, 53, 49, 48, 67, 48, 69, 65, 66, 70, 50, 70, 49, 52, 55, 49, 52, 53, 56, 1, 64, 1, 74, 5, 101, 110, 45, 85, 83, 82, 9, 77, 121, 32, 84, 114, 101, 122, 111, 114, 96, 1, 106, 20, 199, 131, 44, 57, 171, 60, 42, 156, 70, 84, 76, 87, 209, 168, 152, 5, 131, 96, 159, 71, 128, 1, 1, 152, 1, 0, 160, 1, 0, 170, 1, 1, 84, 202, 1, 8, 69, 77, 85, 76, 65, 84, 79, 82, 216, 1, 0, 224, 1, 0, 232, 1, 0, 240, 1, 1, 240, 1, 2, 240, 1, 3, 240, 1, 4, 240, 1, 5, 240, 1, 7, 240, 1, 9, 240, 1, 11, 240, 1, 12, 240, 1, 13, 240, 1, 14, 240, 1, 15, 240, 1, 16, 240, 1, 17, 240, 1, 18, 240, 1, 19, 240, 1, 10, 240, 1, 6, 248, 1, 0, 128, 2, 1, 136, 2, 0, 144, 2, 0, 154, 2, 32, 219, 228, 156, 245, 126, 212, 248, 145, 197, 241, 9, 139, 96, 184, 129, 222, 63, 144, 219, 57, 146, 96, 53, 190, 201, 6, 225, 151, 148, 97, 49, 69, 160, 2, 0, 168, 2, 0, 176, 2, 192, 207, 36, 184, 2, 0, 192, 2, 0, 200, 2, 0, 208, 2, 2, 216, 2, 0, 226, 2, 4, 84, 50, 84, 49, 248, 2, 240, 1, 128, 3, 240, 1, 144, 3, 1, 184, 129, 222, 63, 144, 219, 57, 146, 96, 53, 190, 201, 6, 225, 151, 148, 97, 49, 69, 160, 2, 0, 168, 2, 0, 176, 2, 192, 207, 36, 184, 2, 0, 192, 2, 0, 200, 2, 0, 208]
  // Not Initializer Trezor
  // final Uint8List decBytes = Uint8List.fromList(<int>[63, 35, 35, 0, 17, 0, 0, 1, 0, 10, 9, 116, 114, 101, 122, 111, 114, 46, 105, 111, 16, 2, 24, 7, 32, 1, 50, 24, 51, 53, 53, 67, 56, 49, 55, 53, 49, 48, 67, 48, 69, 65, 66, 70, 50, 70, 49, 52, 55, 49, 52, 53, 56, 0, 64, 0, 74, 5, 101, 110, 45, 85, 83, 96, 0, 106, 20, 199, 131, 44, 57, 171, 60, 42, 156, 70, 84, 76, 87, 209, 168, 152, 5, 131, 96, 159, 71, 128, 1, 1, 152, 1, 0, 160, 1, 0, 170, 1, 1, 84, 202, 1, 8, 69, 77, 85, 76, 65, 84, 79, 82, 216, 1, 0, 224, 1, 0, 232, 1, 0, 240, 1, 1, 240, 1, 2, 240, 1, 3, 240, 1, 4, 240, 1, 5, 240, 1, 7, 240, 1, 9, 240, 1, 11, 240, 1, 12, 240, 1, 13, 240, 1, 14, 240, 1, 15, 240, 1, 16, 240, 1, 17, 240, 1, 18, 240, 1, 19, 240, 1, 10, 240, 1, 6, 248, 1, 0, 128, 2, 1, 136, 2, 0, 144, 2, 0, 154, 2, 32, 170, 139, 80, 46, 1, 199, 197, 81, 108, 116, 221, 159, 219, 228, 156, 245, 126, 212, 248, 145, 197, 241, 9, 139, 96, 184, 129, 222, 63, 144, 219, 57, 160, 2, 0, 168, 2, 0, 176, 2, 192, 207, 36, 184, 2, 0, 192, 2, 0, 200, 2, 0, 208, 2, 2, 216, 2, 0, 226, 2, 4, 84, 50, 84, 49, 248, 2, 240, 1, 128, 3, 240, 1, 144, 3, 1, 228, 156, 245, 126, 212, 248, 145, 197, 241, 9, 139, 96, 184, 129, 222, 63, 144, 219, 57, 160, 2, 0, 168, 2, 0, 176, 2, 192, 207, 36, 184, 2, 0, 192, 2, 0, 200, 2, 0, 208, 2, 2, 216, 2, 0, 226, 2, 4, 84, 50, 84]
  // Custom input
  final Uint8List decBytes = Uint8List.fromList(<int>[63, 35, 35, 0, 17, 0, 0, 0, 232, 10, 9, 116, 114, 101, 122, 111, 114, 46, 105, 111, 16, 2, 24, 7, 32, 1, 50, 24, 51, 53, 53, 67, 56, 49, 55, 53, 49, 48, 67, 48, 69, 65, 66, 70, 50, 70, 49, 52, 55, 49, 52, 53, 56, 1, 64, 1, 74, 5, 101, 110, 45, 85, 83, 82, 9, 77, 121, 32, 84, 114, 101, 122, 111, 114, 96, 1, 106, 20, 199, 131, 44, 57, 171, 60, 42, 156, 70, 84, 76, 87, 209, 168, 152, 5, 131, 96, 159, 71, 128, 1, 1, 152, 1, 0, 160, 1, 0, 170, 1, 1, 84, 202, 1, 8, 69, 77, 85, 76, 65, 84, 79, 82, 216, 1, 0, 224, 1, 0, 232, 1, 0, 240, 1, 1, 240, 1, 2, 240, 1, 3, 240, 1, 4, 240, 1, 5, 240, 1, 7, 240, 1, 9, 240, 1, 11, 240, 1, 12, 240, 1, 13, 240, 1, 14, 240, 1, 15, 240, 1, 16, 240, 1, 17, 240, 1, 18, 240, 1, 19, 240, 1, 10, 240, 1, 6, 248, 1, 0, 128, 2, 1, 136, 2, 0, 144, 2, 0, 160, 2, 0, 168, 2, 0, 176, 2, 192, 207, 36, 184, 2, 0, 192, 2, 0, 200, 2, 0, 208, 2, 2, 216, 2, 0, 226, 2, 4, 84, 50, 84, 49, 248, 2, 240, 1, 128, 3, 240, 1, 144, 3, 1, 19, 240, 1, 10, 240, 1, 6, 248, 1, 0, 128, 2]
  );
  // @formatter:on

  bool isMessageValid = String.fromCharCode(decBytes[0]) == '?';

  bool isStartingMessage = String.fromCharCodes(decBytes.sublist(0, 3)) == '?##';
  if (isMessageValid) {
    if (isStartingMessage) {
      print('decBytes: $decBytes');
      int msgType = BytesUtils.decBytesToInt(decBytes.sublist(3, 5));
      print('msgType: $msgType');
      int msgSize = BytesUtils.decBytesToInt(decBytes.sublist(5, 9));
      print('msgSize: $msgSize');
      Uint8List msgContents = decBytes.sublist(9, 9 + msgSize);
      print('msgContents: $msgContents');
      MessageType? messageType = MessageType.valueOf(msgType);
      $pb.GeneratedMessage message = MessageMapper.getMessage(messageType!, msgContents);
      print('MESSAGE');
      print(messageType);
      print(message);
    }
  }
}